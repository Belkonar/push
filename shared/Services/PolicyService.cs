// <auto-generated/>

using System.Net.Http.Json;
using shared.Models;
using shared.Interfaces;
using shared.UpdateModels;

namespace shared.services;

public class PolicyService : IPolicyController
{
    private readonly HttpClient _client;
    
    private const string Prefix = "/Policy";
    
    public PolicyService(IHttpClientFactory factory)
    {
        _client = factory.CreateClient("api");
    }

    public async Task<List<Policy>> GetAll()
    {
        var route = $"{Prefix}/";

        var httpResponse = await _client.GetAsync(route);
        httpResponse.EnsureSuccessStatusCode();
        return await httpResponse.Content.ReadFromJsonAsync<List<Policy>>() ?? new List<Policy>();
    }

    public async Task<Policy> Update(string key, UpdatePolicy policy)
    {
        var route = $"{Prefix}/{key}";


        var httpResponse = await _client.PutAsJsonAsync(route, policy);

        httpResponse.EnsureSuccessStatusCode();
        return (await httpResponse.Content.ReadFromJsonAsync<Policy>())!;
    }

    public async Task<Policy> Create(string key)
    {
        var route = $"{Prefix}/{key}";


        var httpResponse = await _client.PostAsync(route, null);

        httpResponse.EnsureSuccessStatusCode();
        return (await httpResponse.Content.ReadFromJsonAsync<Policy>())!;
    }

}