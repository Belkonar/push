@page "/credential-create/{Id:guid}"
@using shared.Models

@inject HttpClient Http
@inject ToastService Toaster
@inject NavigationManager Nav

<h3>Credential Create</h3>

<Card>
    <div class="mb-3">
        <label class="form-label" for="policy-input">Credential Name</label>
        <input id="policy-input" class="form-control" @bind="Name" />
    </div>
    
    <div class="form-group">
        <label class="form-label" for="kind">Credential Kind</label>
        <select class="form-control" id="kind" @bind="Kind">
            <option value="">Please Select</option>
            <option value="static">Static</option>
        </select>
    </div>
    
    <div class="form-group">
        <label class="form-label">Is Managed</label>
        <InputCheckbox @bind-Value="IsManaged"></InputCheckbox>
    </div>
    
    <button onclick="@Save" class="btn btn-primary">Save</button>
</Card>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private string Name { get; set; } = "";

    private string Kind { get; set; } = "";

    private bool IsManaged { get; set; }

    private async Task Save()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(Kind))
            {
                return;
            }
            
            using var response = await Http.PostAsJsonAsync($"/organization/{Id}/credential", new Credential()
            {
                OrganizationId = Id,
                Name = Name,
                Kind = Kind,
                IsManaged = IsManaged
            });
            response.EnsureSuccessStatusCode();

            var responseData = await response.Content.ReadFromJsonAsync<Credential>();
            
            Nav.NavigateTo($"/credential/{responseData!.Id}");
        }
        catch (Exception e)
        {
            Toaster.AddError(e);
        }
    }
}